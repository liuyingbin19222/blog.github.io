(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{356:function(t,n,e){"use strict";e.r(n);var s=e(8),a=Object(s.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[this._v("- 设计模式在编码中起到给予灵感的作用，所以，通过多编码，可以熟悉JS的设计模式\n- 单例模式:\n    单例模式简单来说就是只能实现一次实例化，实现的关键是用一个变量来记录实例化的状态，实例化一次之后就不能实例化，实现代码如下:\n    ```\n    function once(){\n        \n    }\n    ```")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);